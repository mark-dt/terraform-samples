name: Terraform Dynatrace Provider Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    # Initialize Terraform
    - name: Terraform Init
      env:
        DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
        TF_VAR_DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      run: terraform init

    - name: Debug Environment Variables
      run: echo "DYNATRACE_ENV_URL=$DYNATRACE_ENV_URL"
      env:
        DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}

    # Validate Terraform
    - name: Terraform Validate
      env:
        DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
        TF_VAR_DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      run: terraform validate

    - name: Terraform Plan
      env:
        TF_INPUT: false
        DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
        DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
      #run: terraform plan -out=tfplan
      run: terraform plan -out=tfplan -var="DYNATRACE_ENV_URL=${{ secrets.DYNATRACE_ENV_URL }}" -var="DYNATRACE_API_TOKEN=${{ secrets.DYNATRACE_API_TOKEN }}"

    # Apply Terraform changes
#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/main'
#      env:
#        DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
#        DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
#      run: terraform apply -auto-approve tfplan
